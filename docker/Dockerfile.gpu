FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04

# tag: v0.9.6

COPY utils/apt-install-and-clear.sh /usr/local/bin/apt-install-and-clear

RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub
RUN rm -f /etc/apt/sources.list.d/nvidia-ml.list && apt-get clean

RUN apt-get update --fix-missing

COPY install/ubuntu_setup_tz.sh /install/ubuntu_setup_tz.sh
RUN bash /install/ubuntu_setup_tz.sh

COPY install/ubuntu_install_core.sh /install/ubuntu_install_core.sh
RUN bash /install/ubuntu_install_core.sh

COPY install/ubuntu_install_dev_tools.sh /install/ubuntu_install_dev_tools.sh
RUN bash /install/ubuntu_install_dev_tools.sh

#COPY install/ubuntu_install_cmake_from_source.sh /install/ubuntu_install_cmake_from_source.sh
#RUN bash /install/ubuntu_install_cmake_from_source.sh

COPY install/ubuntu_install_python3.sh /install/ubuntu_install_python3.sh
RUN bash /install/ubuntu_install_python3.sh "3.9"

COPY install/ubuntu_install_tensorflow_gpu.sh /install/ubuntu_install_tensorflow_gpu.sh
RUN bash /install/ubuntu_install_tensorflow_gpu.sh

COPY install/ubuntu_install_tflite.sh /install/ubuntu_install_tflite.sh
RUN bash /install/ubuntu_install_tflite.sh

COPY install/ubuntu_install_onnx_gpu.sh /install/ubuntu_install_onnx_gpu.sh
RUN bash /install/ubuntu_install_onnx_gpu.sh

COPY install/ubuntu_install_torch_gpu.sh /install/ubuntu_install_torch_gpu.sh
RUN bash /install/ubuntu_install_torch_gpu.sh

#COPY install/ubuntu_install_opencv3_from_source.sh /install/ubuntu_install_opencv3_from_source.sh
#RUN bash /install/ubuntu_install_opencv3_from_source.sh

#COPY install/ubuntu_install_boost_from_source.sh /install/ubuntu_install_boost_from_source.sh
#RUN bash /install/ubuntu_install_boost_from_source.sh "1.67.0" "3.9"

#COPY install/ubuntu_install_abseil_from_source.sh /install/ubuntu_install_abseil_from_source.sh
#RUN bash /install/ubuntu_install_abseil_from_source.sh

#COPY install/ubuntu_install_protobuf_from_source.sh /install/ubuntu_install_protobuf_from_source.sh
#RUN bash /install/ubuntu_install_protobuf_from_source.sh

COPY install/ubuntu_install_caffe_deps.sh /install/ubuntu_install_caffe_deps.sh
RUN bash /install/ubuntu_install_caffe_deps.sh

COPY install/ubuntu_install_llvm.sh /install/ubuntu_install_llvm.sh
RUN bash /install/ubuntu_install_llvm.sh 15 16 17

ENV TVM_HOME="/opt/tvm"
ENV TVM_PYTHON_VERSION="3.9"
ENV PYTHONPATH="${TVM_HOME}/python:${PYTHONPATH}"
ARG TVM_BUILD_USE_LLVM="ON"
ARG TVM_BUILD_USE_CUDA="ON"
ARG TVM_BUILD_USE_CUDNN="ON"
COPY install/ubuntu_install_tvm_from_source.sh /install/ubuntu_install_tvm_from_source.sh
RUN bash /install/ubuntu_install_tvm_from_source.sh
COPY utils/tvmc.sh /usr/local/bin/tvmc

COPY install/ubuntu_install_paddlepaddle_gpu.sh /install/ubuntu_install_paddlepaddle_gpu.sh
RUN bash /install/ubuntu_install_paddlepaddle_gpu.sh

ENV ONNX_MODIFIER_HOME="/opt/onnx-modifier"
COPY install/ubuntu_install_onnx_modifier_from_source.sh /install/ubuntu_install_onnx_modifier_from_source.sh
RUN bash /install/ubuntu_install_onnx_modifier_from_source.sh
COPY utils/onnx-modifier.sh /usr/local/bin/onnx-modifier

COPY install/ubuntu_install_extra.sh /install/ubuntu_install_extra.sh
RUN bash /install/ubuntu_install_extra.sh

ENV SHELL="/usr/bin/zsh"
COPY install/ubuntu_install_zsh.sh /install/ubuntu_install_zsh.sh
RUN bash /install/ubuntu_install_zsh.sh

ENV LANG=C.UTF-8
COPY install/ubuntu_install_vim.sh /install/ubuntu_install_vim.sh
RUN bash /install/ubuntu_install_vim.sh

RUN git config --global --add safe.directory "*"

ARG HOME="/root"
COPY conf/.vimrc "${HOME}"/.vimrc
COPY conf/.zshrc "${HOME}"/.zshrc
COPY conf/.bashrc "${HOME}"/.bashrc
COPY conf/.tmux.conf "${HOME}"/.tmux.conf

ARG PY3_VERSION="$(python3 --version | awk '{print $2}')"
ARG PY3_MAJOR_VERSION="$(echo "${PY3_VERSION}" | cut -d'.' -f1)"
ARG PY3_MINOR_VERSION="$(echo "${PY3_VERSION}" | cut -d'.' -f2)"
ARG PY3_PATCH_VERSION="$(echo "${PY3_VERSION}" | cut -d'.' -f3)"
ARG PY3_MAJOR_MINOR_VERSION="${PY3_MAJOR_VERSION}.${PY3_MINOR_VERSION}"

ENV PATH="/usr/local/cuda/bin:/usr/local/nvidia/bin:${PATH}"
ENV C_INCLUDE_PATH="/usr/local/cuda/include:${C_INCLUDE_PATH}"
ENV CPLUS_INCLUDE_PATH="/usr/local/cuda/include:${CPLUS_INCLUDE_PATH}"
ENV LIBRARY_PATH="/usr/local/cuda/lib64:/usr/local/cuda/compat:${LIBRARY_PATH}"
ENV LD_LIBRARY_PATH="/usr/lib/x86_64-linux-gnu:/usr/local/cuda/lib64:/usr/local/cuda/compat:${LD_LIBRARY_PATH}"

ENV THIS_DOCKER_REPOSITORY="https://hub.docker.com/repository/docker/duruyao/vimicro-mc"
ENV THIS_DOCKER_TAG="gpu"
ARG BUILD_DATE
ENV THIS_DOCKER_CREATED="${BUILD_DATE}"
ENV THIS_GIT_REPOSITORY="https://github.com/duruyao/vimicro-ai-mc"
ARG BUILD_TAG
ENV THIS_GIT_TAG="${BUILD_TAG}"
